{
    "data_version": "4.0",
    "references": {
        "reference_data": "http://www.vapidlabs.com/advisory.php?v=193"
    },
    "description": {
        "description_data": "SQL Injection in Wordpress plugin surveys v1.01.8"
    },
    "data_type": "CVE",
    "affects": {
        "vendor": {
            "vendor_data": [
                {
                    "product": {
                        "product_data": [
                            {
                                "version": {
                                    "version_data": [
                                        {
                                            "version_value": "n/a",
                                            "version_affected": "1.01.8"
                                        }
                                    ]
                                },
                                "product_name": "n/a"
                            }
                        ]
                    },
                    "vendor_name": "http://www.binnyva.com/"
                }
            ]
        }
    },
    "CVE_data_meta": {
        "UPDATED": "2017-08-10T14:41Z",
        "CVE_product_name": "https://wordpress.org/plugins/surveys/",
        "ASSIGNER": "larry0@me.com",
        "STATE": "PUBLIC",
        "REQUESTER": "kurt@seifried.org",
        "ID": "CVE-2017-1002020 2017-1002021 2017-1002022",
        "DATE_ASSIGNED": "2017-05-21"
    },
    "data_format": "MITRE",
    "problemtype": {
        "problemtype_data": [
            {
                "description": [
                    {
                        "lang": "EN",
                        "value": "CVE-2017-1002020:\r\n\r\nThe following code in survey_form.php does not sanitize $_REQUEST['action'] before placing it inside of an SQL query:\r\n\r\n10:\t$survey_details = $wpdb->get_row("SELECT name,description,status FROM {$wpdb->prefix}surveys_survey WHERE ID=$_REQUEST[survey]");\r\n\r\nCVE-2017-1002021:\r\n\r\nThe following code in individual_responses.php does not sanitize input from $survey_id or $_REQUEST[result] before placing it inside of an SQL query:\r\n\r\n\r\n  5 $survey_id = $_REQUEST['survey'];\r\n  6 $survey_details = $wpdb->get_row("SELECT ID, name FROM {$wpdb->prefix}surveys_survey WHERE ID=$survey_id");\r\n  7 \r\n  8 if(isset($_REQUEST['action']) and $_REQUEST['action'] == 'delete') {\r\n  9         $wpdb->query("DELETE FROM {$wpdb->prefix}surveys_result_answer WHERE result_ID=$_REQUEST[result]");\r\n 10         $wpdb->query("DELETE FROM {$wpdb->prefix}surveys_result WHERE ID=$_REQUEST[result]");\r\n\r\nCVE-2017-1002022:\r\n\r\nIn questions.php $_REQUEST[survey] is injectable as it is passed directly into the SQL statement:\r\n94 $all_question = $wpdb->get_results("SELECT Q.ID,Q.question,(SELECT COUNT(*) FROM {$wpdb->prefix}surveys_answer WHERE question_id=Q.ID) AS answer_count\r\n 95                                                                              FROM {$wpdb->prefix}surveys_question AS Q\r\n 96                                                  WHERE Q.survey_id=$_REQUEST[survey]");\r\n\r\n\r\n"
                    }
                ]
            }
        ]
    }
}
