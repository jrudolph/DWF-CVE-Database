{
    "data_version": "4.0",
    "references": {
        "reference_data": "http://www.vapidlabs.com/advisory.php?v=186"
    },
    "description": {
        "description_data": "Two Content Injection vulnerabilities in Wordpress Plugin DTracker v1.5 "
    },
    "data_type": "CVE",
    "affects": {
        "vendor": {
            "vendor_data": [
                {
                    "product": {
                        "product_data": [
                            {
                                "version": {
                                    "version_data": [
                                        {
                                            "version_value": "n/a",
                                            "version_affected": "1.5"
                                        }
                                    ]
                                },
                                "product_name": "n/a"
                            }
                        ]
                    },
                    "vendor_name": "https://profiles.wordpress.org/dijo/"
                }
            ]
        }
    },
    "CVE_data_meta": {
        "UPDATED": "2017-08-10T14:41Z",
        "CVE_product_name": "https://wordpress.org/plugins/dtracker/",
        "ASSIGNER": "larry0@me.com",
        "STATE": "PUBLIC",
        "REQUESTER": "kurt@seifried.org",
        "ID": "CVE-2017-1002006 2017-1002007",
        "DATE_ASSIGNED": "2017-03-08"
    },
    "data_format": "MITRE",
    "problemtype": {
        "problemtype_data": [
            {
                "description": [
                    {
                        "lang": "EN",
                        "value": "CVE-2017-1002006:\r\nIn file dtracker/save_contact.php\r\n\r\nDoesn't check that the user is authorized before injecting new contacts into the wp_contact table.  A simple post request will allow any user to add new contacts.  A malicious user could inject javascript into the database to be executed in the browser of the admin user.  \r\n\r\n$name \t\t= $_POST['name'];\r\n\t$company\t= $_POST['company'];\r\n\t$phone \t\t= $_POST['phone'];\r\n\t$country\t= $_POST['country'];\r\n\t$contact_id = $_POST['contact_id'];\r\n\t\r\n\t$table \t= 'wp_contacts';\r\n\t$data\t= array(\r\n\t\t\t\t'name'\t\t=> $name,\r\n\t\t\t\t'company'\t=> $company,\r\n\t\t\t\t'phone'\t\t=> $phone,\r\n\t\t\t\t'country'\t=> $country,\r\n\t\t\t);\r\n\t$where\t= array(\r\n\t\t\t\t'id'\t=> $contact_id\r\n\t\t\t);\r\n\t\r\n$wpdb->flush();\r\n\t\r\n$wpdb->update( $table, $data, $where ); //Update the Contact\r\n\r\nCVE-2017-1002007:\r\nIn file dtracker/save_mail.php\r\n\r\nDoesn't check that the user is authorized before injecting new emails into the wp_contact table.  A simple post request will allow any user to add new contacts.  A malicious user could inject javascript into the database to be executed in the browser of the admin user.  \r\n\r\n\r\n$email \t= $_POST['email'];\r\n\t$time\t= date('Y-m-d H:i:s');\r\n\t$ip\t\t= $_SERVER [ 'REMOTE_ADDR' ] ; //get IP address of the visitor\r\n\t\r\n\t$table \t= "wp_contacts";\r\n\t$data\t= array (\r\n\t\t\t\t'email' \t=> $email,\r\n\t\t\t\t'time'\t\t=> $time,\r\n\t\t\t\t'ip'\t\t=> $ip\t\r\n\t\t\t);\r\n\t\r\n\t$wpdb->insert( $table, $data); //Insert Values\r\n\t$contact_id = $wpdb->insert_id; //Get ID of the last inserted row\r\n\t$data['contactId'] = $contact_id;\r\n\techo json_encode($data); //Pass the id to the JS"
                    }
                ]
            }
        ]
    }
}
