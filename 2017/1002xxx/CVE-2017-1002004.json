{
    "data_version": "4.0",
    "references": {
        "reference_data": "http://www.vapidlabs.com/advisory.php?v=183"
    },
    "description": {
        "description_data": "Multiple Blind SQL injection vulnerability in Wordpress Plugin DTracker v1.5"
    },
    "data_type": "CVE",
    "affects": {
        "vendor": {
            "vendor_data": [
                {
                    "product": {
                        "product_data": [
                            {
                                "version": {
                                    "version_data": [
                                        {
                                            "version_value": "n/a",
                                            "version_affected": "1.5"
                                        }
                                    ]
                                },
                                "product_name": "n/a"
                            }
                        ]
                    },
                    "vendor_name": "https://profiles.wordpress.org/dijo/"
                }
            ]
        }
    },
    "CVE_data_meta": {
        "UPDATED": "2017-08-10T14:41Z",
        "CVE_product_name": "https://wordpress.org/plugins/dtracker/",
        "ASSIGNER": "larry0@me.com",
        "STATE": "PUBLIC",
        "REQUESTER": "kurt@seifried.org",
        "ID": "CVE-2017-1002004 2017-1002005 ",
        "DATE_ASSIGNED": "2017-03-08"
    },
    "data_format": "MITRE",
    "problemtype": {
        "problemtype_data": [
            {
                "description": [
                    {
                        "lang": "EN",
                        "value": "CVE-2017-1002004:\r\nIn file ./dtracker/download.php user input isn't sanitized via the id variable before adding it to the end of an SQL query.\r\n\r\n$doc_id         = $_GET['id'];\r\n$file = $wpdb->get_results( "SELECT * FROM wp_posts WHERE ID = $doc_id " );\r\n\r\nThe user does not need to be authenticated to the Wordpress installation to exploit this vulnerability.\r\n\r\nCVE-2017-1002005:\r\nIn file ./dtracker/delete.php user input isn't sanitized via the contact_id variable before adding it to the end of an SQL query.\r\n\r\n$contact_id     = $_POST['contact_id']; //Contact ID to be deleted\r\n\r\n$query  = "DELETE FROM wp_contacts WHERE id = $contact_id";\r\n$wpdb->query($query); // Delete the contact\r\n\r\nThe user does not need to be authenticated to the Wordpress installation to exploit this vulnerability.\r\n"
                    }
                ]
            }
        ]
    }
}
